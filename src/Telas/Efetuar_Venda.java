/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import Controle.Conexao;
import Controle.Produto_BD;
import Controle.Pizza_BD;
import Controle.Venda_BD;
import Modelo.Pizza;
import Modelo.Produto;
import Modelo.Venda;

import java.util.Date;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;   
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pedro
 */

public class Efetuar_Venda extends javax.swing.JFrame {
    Connection connection = null;
    float total = 0,valor;
    String nome_pizza, ingredientes_pizza;
    
    boolean vendaConcluida;
    
    int quantidade_certa, quantidade_nova, quantidade_bd;
    
    Produto_BD produto = new Produto_BD();
    
    Pizza_BD lista_busca = new Pizza_BD();
    
    Venda_BD venda = new Venda_BD();
    

    
    public ArrayList<Pizza> lista_selecionado;
    
    public Efetuar_Venda() {
        initComponents();
        
        inicializaCampos_tabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_Voltar = new javax.swing.JButton();
        btn_concluirVenda = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Cardapio = new javax.swing.JTable();
        btn_Limpar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_Carrinho = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtBox_Total = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(0, 153, 0));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("TECNO-PIZZA");

        btn_Voltar.setBackground(new java.awt.Color(0, 204, 51));
        btn_Voltar.setText("⬅️ Voltar");
        btn_Voltar.setBorderPainted(false);
        btn_Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_VoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_Voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_Voltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btn_concluirVenda.setBackground(new java.awt.Color(0, 153, 0));
        btn_concluirVenda.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btn_concluirVenda.setText("CONCLUIR VENDA");
        btn_concluirVenda.setBorderPainted(false);
        btn_concluirVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_concluirVendaActionPerformed(evt);
            }
        });

        tbl_Cardapio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "Ingredientes", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_Cardapio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_CardapioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_Cardapio);

        btn_Limpar.setBackground(new java.awt.Color(102, 102, 102));
        btn_Limpar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btn_Limpar.setForeground(new java.awt.Color(255, 255, 255));
        btn_Limpar.setText("LIMPAR");
        btn_Limpar.setBorderPainted(false);
        btn_Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LimparActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Total:");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("R$");

        tbl_Carrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Quantidade", "Valor unitário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_Carrinho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_CarrinhoMouseClicked(evt);
            }
        });
        tbl_Carrinho.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbl_CarrinhoPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_Carrinho);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Carrinho");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("dê dois cliques para remover uma pizza do carrinho");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("dê dois cliques para adicionar uma pizza ao carrinho");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Cardápio");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBox_Total, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btn_concluirVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btn_Limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBox_Total, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_concluirVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(816, 639));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Formulario
    private Pizza getDados_Pizza() {
        Pizza getDadosPizza = new Pizza();
        
        return getDadosPizza;
    }
    
    private Venda getDados_Venda(int i) {
        Venda getDadosVenda = new Venda();
        getDadosVenda.setNome_produto(tbl_Carrinho.getValueAt(i , 0).toString());
        getDadosVenda.setQuantidade((int)tbl_Carrinho.getValueAt(i , 1));
        float val_total_venda = (int)tbl_Carrinho.getValueAt(i , 1) * (float)tbl_Carrinho.getValueAt(i , 2);
        getDadosVenda.setValor(val_total_venda);
        
        Date data = new Date();
        
        getDadosVenda.setData(data.toString());

        return getDadosVenda;
    }
    
    //Tabela
    private ArrayList <Pizza> getDataTabelaCardapio() {
        int i;
        DefaultTableModel model=(DefaultTableModel)tbl_Cardapio.getModel();
        model.setNumRows(0);

        ArrayList<Pizza> listaPizzas = new ArrayList<Pizza>();
        listaPizzas = new Pizza_BD().getListaPizza();
        //adiciona pizzas as tabelas
        for (i=0;i<=listaPizzas.size()-1;i++){
            model.addRow(new Object[]{listaPizzas.get(i).getNome(), listaPizzas.get(i).getIngredientes(), listaPizzas.get(i).getValor()});
        }
        return listaPizzas;
    }
    
    //Atualiza valor total
    private void atualizaTotal() {
       total = 0;
       for (int i = 0; i < tbl_Carrinho.getRowCount(); i++) {
           System.out.println("Qtd: "+(int)tbl_Carrinho.getValueAt(i , 1));
           System.out.println("valor: "+(float)tbl_Carrinho.getValueAt(i, 2));
           valor = (int)tbl_Carrinho.getValueAt(i , 1) * (float)tbl_Carrinho.getValueAt(i, 2);
           System.out.println("Valor: "+valor);
           total=total+valor;
           System.out.println("Total: "+valor);
       }

       txtBox_Total.setText(Float.toString(total));
    }
    
    //Zera os campos do formulario
    private void limpaCampos(){
        Efetuar_Venda Tela_limpa = new Efetuar_Venda();
        Tela_limpa.setVisible(true);
        this.dispose();
       
    }
    
    private void inicializaCampos_tabela() {
        getDataTabelaCardapio();
        
    }
    
    
    
    private void btn_concluirVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_concluirVendaActionPerformed
       
        
       for (int i = 0; i < tbl_Carrinho.getRowCount(); i++) {
           
           venda.inserirVenda(getDados_Venda(i));
            
            Connection con = null;
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/tecno_pizza", "root", "");
                java.sql.Statement stm = con.createStatement();
                String SQL = "Select * from pizzas where nome = '"+tbl_Carrinho.getValueAt(i , 0).toString()+"';";
                
                ResultSet rs = stm.executeQuery(SQL);
                
                
                while (rs.next()){
                    ingredientes_pizza = rs.getString("ingredientes");
                }
                     
            }catch(SQLException e){
                e.printStackTrace(); //vejamos que erro foi gerado e quem o gerou
                JOptionPane.showMessageDialog(null,"Erro na conexÃ£o, com o banco de dados!","Oi. Simples assim!",JOptionPane.WARNING_MESSAGE);
            }catch (ClassNotFoundException e) 
            {
                e.printStackTrace();
            }
            finally
            {
                try{
                    con.close();
                }catch(SQLException onConClose){
                    //System.out.println("Houve erro no fechamento da conexÃ£o");
                    JOptionPane.showMessageDialog(null,"Erro na conexÃ£o, com o banco de dados!","Oi. Simples assim!",JOptionPane.WARNING_MESSAGE);
                    onConClose.printStackTrace();
                }
               
              String[] listaIngredientes = ingredientes_pizza.split(",");
              
              int tam_Ingredientes = listaIngredientes.length;
              
              for (int f = 0; f < tam_Ingredientes; f++) {
                  quantidade_nova = 0;
                  quantidade_certa = 0;
                  //System.out.println("Posicao "+f+ ": "+ listaIngredientes[f]);
           
                  
                  // inicia a conexao com o Banco de dados chamando a classe Conexao
                   connection = Conexao.getInstance().getConnection();
                    //System.out.println("conectado e preparando para atualizar");
        
                    Statement stmt = null;
                    
                    try {
                        stmt = connection.createStatement();

                        String SQL = "Select * from produtos where nome = '"+listaIngredientes[f]+"';";

                        ResultSet res_prod = stmt.executeQuery(SQL);
                
                
                        while (res_prod.next()){
                            quantidade_certa = res_prod.getInt("quantidade");
                        }
                
                        quantidade_nova = quantidade_certa - (int)tbl_Carrinho.getValueAt(i , 1);

                        System.out.println("Posicao "+f+ ": "+ listaIngredientes[f] + ", quantidade: "+quantidade_nova);

                        if (quantidade_nova < 0) {
                            JOptionPane.showMessageDialog(null,"Não temos ingredientes suficientes no estoque para produzirmos essa Pizza","Oi. Simples assim!",JOptionPane.WARNING_MESSAGE);
                            vendaConcluida = false;
                            break;
                        } else {

                            String sql = "UPDATE produtos SET quantidade = '" + quantidade_nova + "' where nome = '"+listaIngredientes[f]+"'";
                            System.out.println("SQL: " + sql);
                            stmt.executeUpdate(sql);
                            vendaConcluida = true;
                        }
                        
                    } catch (SQLException e) {
                        System.out.println(e.getMessage());
                      } finally {
                        // este bloco finally sempre executa na instrução try para
                        // fechar a conexão a cada conexão aberta
                        try {
                            stmt.close();
                            connection.close();                         

                        } catch (SQLException e) {
                            System.out.println("Erro ao desconectar" + e.getMessage());
                        }
                       }
     
              }

       }
         
       }
       
       if (vendaConcluida == true) {
            JOptionPane.showMessageDialog(null,"Venda realizada com sucesso!","SUCESSO!",JOptionPane.WARNING_MESSAGE);
            limpaCampos();
       }
        
    }//GEN-LAST:event_btn_concluirVendaActionPerformed

    
    private void tbl_CardapioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_CardapioMouseClicked
        if (evt.getClickCount()==2){
            tbl_Cardapio.getValueAt(tbl_Cardapio.getSelectedRow(), 0);
            DefaultTableModel model_carrinho=(DefaultTableModel)tbl_Carrinho.getModel();

            Object[] pizzas_selecionadas = {tbl_Cardapio.getValueAt(tbl_Cardapio.getSelectedRow(), 0), 1, tbl_Cardapio.getValueAt(tbl_Cardapio.getSelectedRow(), 2)};

            model_carrinho.addRow(pizzas_selecionadas);
            atualizaTotal();
        }
    }//GEN-LAST:event_tbl_CardapioMouseClicked

    private void btn_LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LimparActionPerformed
        limpaCampos();
    }//GEN-LAST:event_btn_LimparActionPerformed

    private void tbl_CarrinhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_CarrinhoMouseClicked
        if (evt.getClickCount()==2){
            DefaultTableModel model_carrinho=(DefaultTableModel)tbl_Carrinho.getModel();
            model_carrinho.removeRow(tbl_Carrinho.getSelectedRow());
            atualizaTotal();
        }
    }//GEN-LAST:event_tbl_CarrinhoMouseClicked

    private void tbl_CarrinhoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbl_CarrinhoPropertyChange
        
       atualizaTotal();
    }//GEN-LAST:event_tbl_CarrinhoPropertyChange

    private void btn_VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_VoltarActionPerformed
        Principal_Administrador Tela_Adm = new Principal_Administrador();

        Tela_Adm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_VoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Efetuar_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Efetuar_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Efetuar_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Efetuar_Venda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Efetuar_Venda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Limpar;
    private javax.swing.JButton btn_Voltar;
    private javax.swing.JButton btn_concluirVenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_Cardapio;
    private javax.swing.JTable tbl_Carrinho;
    private javax.swing.JTextField txtBox_Total;
    // End of variables declaration//GEN-END:variables
}
